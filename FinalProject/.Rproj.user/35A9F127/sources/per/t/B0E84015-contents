---
title: "Atletico Madrid season 23/24 team performance analysis"
format: html
editor: visual
---

# Atletico Madrid season 23/24 team performance analysis

In the past thirteen years of La Liga, Atlético Madrid has been regarded as a strong title contender. Despite the dominance of Spain’s two traditional big clubs, Barcelona and Real Madrid, Los Colchoneros managed to break their monopoly and win the league title twice, they were seen this way because of their recent history in the league. The reason is that Atlético has been the only team to consistently challenge Real Madrid and Barcelona over the last decade. Since the 2014/15 season, Atlético Madrid’s league standings have never dropped below third place. However, in the 2023/24 season, their performance plummeted drastically, finishing fourth in the league.

In this report, I will analyze player and team data to answer one question: What caused Atlético Madrid’s poor performance last season? To uncover useful insights, I will explore various attributes across different dimensions. For team performance metrics, I will examine data on accurate passes, crosses, goals conceded, interceptions, and other relevant statistics that reflect overall team effectiveness. Player performance metrics will focus on individual contributions, including expected goals (xG), assists, clearances, fouls committed, and tackles won. Additionally, match-specific insights will provide detailed information on goals scored, scoring attempts, possession percentages, and cards issued per match. By combining these metrics, I aim to identify the factors behind Atlético Madrid’s performance last season.

The dataset used in this report, “La Liga 2023/24: Team & Player Stats,” is hosted on Kaggle, a platform for sharing open data. It was collected and organized by user Whispering Kahuna using data sourced from FotMob, a proprietary platform for football statistics. All copyrights for the original data belong to FotMob, and this dataset is a restricted collection of publicly viewable data and does not claim ownership of FotMob’s data.

# Background Information

```{r include-image, echo=FALSE}
knitr::include_graphics("ATM_formation.png")
```


# Data Exploration

## Team Performance

```{r xG vs. Goals Scored , echo=FALSE}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(cowplot)

# Load the data
laliga_xg <- read.csv("archive/Laliga_table_xg_2023_24.csv")
laliga_table <- read.csv("archive/Laliga_table_2023_24.csv")

# Prepare the data
laliga_table <- laliga_table %>%
  separate(scoresStr, into = c("goalsScored", "goalsConceded"), sep = "-", convert = TRUE)

merged_data <- laliga_xg %>%
  inner_join(laliga_table, by = c("name", "played")) %>%
  filter(idx.x <= 6) # Filter top 5 teams

# Scatter plot with arrows for xG vs. Goals Scored and automatic legend
scatter_plot <- ggplot(merged_data) +
  geom_point(aes(x = xg, y = goalsScored, color = "Actual Goals Scored"), size = 4) + # Actual goals scored
  geom_point(aes(x = xg, y = xg, color = "Expected Goals (xG)"), size = 4) + # Expected goals
  geom_segment(aes(x = xg, y = xg, xend = xg, yend = goalsScored, linetype = "Difference"), 
               arrow = arrow(length = unit(0.3, "cm")), size = 1.2, color = "black") + # Arrow for difference
  geom_text(aes(x = xg, y = goalsScored, label = name), vjust = -1, size = 3) + # Team names
  labs(
    title = "Comparison of Expected Goals (xG) and Actual Goals Scored in La Liga 2023/24",
    subtitle = "Relationship between Expected and Actual Goals for the top 5 teams",
    x = "Expected Goals (xG)",
    y = "Goals Scored",
    color = NULL,      # Remove the word "Legend" for color
    linetype = NULL     # Remove the word "Legend" for line type
  ) +
  scale_color_manual(values = c("Actual Goals Scored" = "red", "Expected Goals (xG)" = "blue")) +
  scale_linetype_manual(values = c("Difference" = "solid")) +
  xlim(35, 80) + # Adjust x-axis range to provide more space
  theme_minimal()

# Display the scatter plot with the adjusted x-axis
print(scatter_plot)
```

From the graph above, we can see how Atlético Madrid’s performance in expected goals (xG) and actual goals scored compares to other top teams in the 2023/24 La Liga season. The blue dots represent the predicted total goals for the season, while the red dots indicate the actual goals scored by the end of the season, and the arrows show the difference between the two. Atlético Madrid’s actual goals exceeded their xG by +6.98, demonstrating decent attacking efficiency. However, this is still significantly behind Real Madrid (+17.24) and Girona (+13.18). Barcelona’s performance was close to their xG, but they scored a total of 79 goals throughout the season, which is lower than Girona’s 85 and Real Madrid’s 87. These three teams displayed exceptional scoring abilities, with Real Madrid and Girona significantly outperforming expectations.

```{r divergence-plot-xgconceded-vs-conceded, echo=FALSE}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)

# Load the data
laliga_xg <- read.csv("archive/Laliga_table_xg_2023_24.csv")
laliga_table <- read.csv("archive/Laliga_table_2023_24.csv")

# Prepare the data
laliga_table <- laliga_table %>%
  separate(scoresStr, into = c("goalsScored", "goalsConceded"), sep = "-", convert = TRUE) # Extract actual goals conceded

merged_data <- laliga_xg %>%
  inner_join(laliga_table, by = c("name", "played")) %>%
  filter(idx.x <= 6) %>% # Filter top 6 teams (if needed)
  mutate(conceded_diff = xgConceded - as.numeric(goalsConceded)) # Calculate the difference

# Divergence plot for xGConceded vs. Goals Conceded
divergence_plot <- ggplot(merged_data, aes(x = reorder(name, conceded_diff), y = conceded_diff, fill = conceded_diff > 0)) +
  geom_bar(stat = "identity", width = 0.6) +
  geom_text(aes(label = round(conceded_diff, 2)), vjust = ifelse(merged_data$conceded_diff > 0, -0.5, 1.5), size = 3) +
  scale_fill_manual(
    values = c(`TRUE` = "blue", `FALSE` = "red"),  # Correctly formatted logical values
    labels = c("Underperformance", "Overperformance")
  ) +
  labs(
    title = "Divergence Plot: xGConceded vs. Actual Goals Conceded",
    subtitle = "Difference between Expected Goals Conceded (xGConceded) and Actual Goals Conceded",
    x = "Team",
    y = "Difference (xGConceded - Goals Conceded)",
    fill = "Performance"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Display the divergence plot
print(divergence_plot)
```

```{r plot for goal conceded, echo=FALSE}
# Prepare the data
laliga_table <- laliga_table %>%
  mutate(goalsConceded = as.numeric(goalsConceded)) # Ensure 'goalsConceded' is numeric

# Create a bar plot for goals conceded, sorted from high to low
goals_conceded_plot <- ggplot(laliga_table, aes(x = reorder(name, -goalsConceded), y = goalsConceded, fill = goalsConceded)) +
  geom_bar(stat = "identity", width = 0.7) +
  geom_text(aes(label = goalsConceded), vjust = -0.5, size = 3.5) + # Add text labels on top of the bars
  scale_fill_gradient(low = "blue", high = "red") + # Color gradient based on goals conceded
  labs(
    title = "Total Goals Conceded by Each Club (High to Low)",
    x = "Club",
    y = "Goals Conceded",
    fill = "Goals Conceded"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Display the bar plot
print(goals_conceded_plot)

```

```{r comparison GA and xGA, echo=FALSE}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)

# Load the data
laliga_xg <- read.csv("archive/Laliga_table_xg_2023_24.csv")
laliga_table <- read.csv("archive/Laliga_table_2023_24.csv")

# Calculate xGA and prepare the data
laliga_xg <- laliga_xg %>%
  mutate(xGA = xg - xgConceded) %>%
  select(name, xGA)

# Merge with goalConDiff from Laliga_table_2023_24.csv
comparison_data <- laliga_table %>%
  select(name, goalConDiff) %>%
  inner_join(laliga_xg, by = "name")

# Reshape the data for the paired bar chart
paired_data <- comparison_data %>%
  pivot_longer(cols = c("xGA", "goalConDiff"), names_to = "Metric", values_to = "Value")

# Create the paired bar chart
paired_bar_plot <- ggplot(paired_data, aes(x = reorder(name, -Value), y = Value, fill = Metric)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  labs(
    title = "Paired Bar Chart: xGA vs. GoalConDiff",
    subtitle = "Comparing Expected Goal Contribution and Goal Differential for Each Team",
    x = "Team",
    y = "Value",
    fill = "Metric"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Display the plot
print(paired_bar_plot)

```

```{r table conceded, echo=FALSE}
library(dplyr)
library(tidyr)
library(knitr)

# Load the La Liga data
laliga_table <- read.csv("archive/Laliga_table_2023_24.csv")

# Extract goalsConceded from scoresStr
laliga_table <- laliga_table %>%
  separate(scoresStr, into = c("goalsScored", "goalsConceded"), sep = "-", convert = TRUE)

# Ensure 'goalsConceded' is numeric
laliga_table <- laliga_table %>%
  mutate(goalsConceded = as.numeric(goalsConceded))

# Calculate summary statistics
summary_stats <- laliga_table %>%
  summarize(
    number_of_teams = n(),
    min_goals_conceded = min(goalsConceded, na.rm = TRUE),
    Q1 = quantile(goalsConceded, 0.25, na.rm = TRUE),
    median = median(goalsConceded, na.rm = TRUE),
    Q3 = quantile(goalsConceded, 0.75, na.rm = TRUE),
    max_goals_conceded = max(goalsConceded, na.rm = TRUE),
    MAD = mean(abs(goalsConceded - mean(goalsConceded, na.rm = TRUE)), na.rm = TRUE), # Mean Absolute Deviation
    SAM = sum(abs(goalsConceded - mean(goalsConceded, na.rm = TRUE)), na.rm = TRUE), # Sum of Absolute Deviations
    SASD = sum((goalsConceded - mean(goalsConceded, na.rm = TRUE))^2, na.rm = TRUE)  # Sum of Squared Deviations
  )

# Find Atlético Madrid's stats
atletico_stats <- laliga_table %>%
  filter(name == "Atletico Madrid") %>%
  select(name, goalsConceded)

# Compare Atlético Madrid's goalsConceded against summary statistics
comparison <- summary_stats %>%
  mutate(
    Atletico_GoalsConceded = atletico_stats$goalsConceded
  )

# Display the comparison table
comparison %>%
  t() %>% # Transpose for better readability
  as.data.frame() %>%
  rename(Value = V1) %>% # Rename the column for clarity
  knitr::kable(
    col.names = c("Metric", "Value"),
    caption = "Summary Statistics and Atlético Madrid's Performance",
    format = "pipe"
  )

```
